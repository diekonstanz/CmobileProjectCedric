<?xml version="1.0" encoding="utf-8" ?>
<ContentView
    x:Class="Crystals.Views.Templates.AddEditCrystal.AddCrystalTemplate"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:views="clr-namespace:Crystals.ViewModels.Templates.AddEditCrystal"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit">

    <ContentView.BindingContext>
        <views:AddCrystalViewModel />
    </ContentView.BindingContext>

    <Grid RowDefinitions="*, Auto">
        <Grid
            Grid.Row="0"
            Margin="0,0,0,10"
            ColumnDefinitions="Auto, Auto"
            HorizontalOptions="Start">
            <Grid.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding BackCommand}" />
            </Grid.GestureRecognizers>
            <Label
                Grid.Column="0"
                FontFamily="{StaticResource FontAwesomeSolid}"
                FontSize="{StaticResource Headline4FontSize}"
                HorizontalOptions="Start"
                Text="&#xf060;"
                TextColor="{AppThemeBinding Light={StaticResource LightPrimaryTextColor},
                                            Dark={StaticResource DarkPrimaryTextColor}}"
                VerticalOptions="Center" />
            <Label
                Grid.Column="1"
                Margin="10,0,0,0"
                Style="{StaticResource Headline4_MulishBlack}"
                Text="{Binding Title}"
                VerticalOptions="Center" />
        </Grid>
        <StackLayout Grid.Row="1">
            <StackLayout Spacing="5">
                <Label Style="{StaticResource Body1_MulishSemiBold}" Text="Name" />
                <Frame x:Name="NameFrame" Style="{StaticResource Base_FrameEntry}">
                    <Entry
                        Placeholder="Enter crystal name"
                        Style="{StaticResource Base_Entry}"
                        Text="{Binding Name.Value}">
                        <Entry.Behaviors>
                            <xct:EventToCommandBehavior Command="{Binding CreateCommand}" EventName="Completed" />
                            <xct:UserStoppedTypingBehavior
                                Command="{Binding ValidateCommand}"
                                CommandParameter="name"
                                ShouldDismissKeyboardAutomatically="False"
                                StoppedTypingTimeThreshold="50" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger
                                Binding="{Binding Name.IsValid}"
                                TargetType="Entry"
                                Value="False">
                                <Setter TargetName="NameFrame" Property="Frame.BorderColor" Value="{StaticResource FailColor}" />
                                <Setter TargetName="AddButton" Property="Button.IsEnabled" Value="False" />
                            </DataTrigger>
                        </Entry.Triggers>
                        <Entry.Effects>
                            <xct:RemoveBorderEffect />
                        </Entry.Effects>
                    </Entry>
                </Frame>
                <Label
                    IsVisible="{Binding Name.IsValid, Converter={xct:InvertedBoolConverter}}"
                    Text="{Binding Name.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                    TextColor="{StaticResource FailColor}" />
            </StackLayout>
            <StackLayout Spacing="5">
                <Label Style="{StaticResource Body1_MulishSemiBold}" Text="Date" />
                <Frame x:Name="DateFrame" Style="{StaticResource Base_FrameEntry}">
                    <DatePicker
                        Date="{Binding RegisteredDate.Value}"
                        FontFamily="Mulish_Regular"
                        Format="dd/MM/yyyy"
                        Style="{StaticResource Base_DatePicker}">
                        <DatePicker.Effects>
                            <xct:RemoveBorderEffect />
                        </DatePicker.Effects>
                    </DatePicker>
                </Frame>
                <Label
                    IsVisible="{Binding RegisteredDate.IsValid, Converter={xct:InvertedBoolConverter}}"
                    Text="{Binding RegisteredDate.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                    TextColor="{StaticResource FailColor}" />
            </StackLayout>
            <Button
                x:Name="LoginButton"
                Margin="20,20,20,10"
                Command="{Binding CreateCommand}"
                Style="{StaticResource Base_Button}"
                Text="Add" />
        </StackLayout>



    </Grid>
</ContentView>